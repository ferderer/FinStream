# Server Configuration
server.port = 8082
server.servlet.context-path = /ws
spring.application.name = finstream-broadcaster

# CORS Configuration for Angular Frontend
finstream.cors.allowed-origins = http://localhost:4200

# Kafka
spring.kafka.bootstrap-servers = localhost:9092
spring.kafka.consumer.group-id = finstream-broadcaster
spring.kafka.consumer.auto-offset-reset = latest
spring.kafka.consumer.key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.enable-auto-commit = false
spring.kafka.listener.ack-mode = manual_immediate
spring.kafka.consumer.session.timeout.ms = 30000
spring.kafka.consumer.heartbeat.interval.ms = 10000
spring.kafka.consumer.max.poll.records = 500
spring.kafka.consumer.max.poll.interval.ms = 300000

# Topic Configuration
finstream.kafka.topic.stock-prices = finstream.stock.prices

# JWT Resource Server Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri = http://localhost:8080
spring.security.oauth2.resourceserver.jwt.jwk-set-uri = http://localhost:8080/oauth2/jwks

# WebSocket STOMP Configuration
finstream.websocket.allowed-origins = http://localhost:4200
finstream.websocket.endpoint = /stock-updates
finstream.websocket.app-destination-prefix = /app
finstream.websocket.topic-destination-prefix = /topic

# Connection Limits (Banking-grade settings)
finstream.websocket.max-connections-per-user = 3
finstream.websocket.heartbeat.send-interval = 10000
finstream.websocket.heartbeat.receive-timeout = 20000

# Message Buffer Settings
finstream.websocket.send-buffer-size = 1024000
finstream.websocket.receive-buffer-size = 1024000
