services:
  postgres:
    image: postgres:17-alpine
    container_name: finstream-postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    environment:
      POSTGRES_DB: finstream_sso
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME:-finstream_sso}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - finstream-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U finstream_sso -d finstream_sso"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: apache/kafka:4.0.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093,INTERNAL://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,INTERNAL://kafka:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      CLUSTER_ID: 'ciWo7IWazngRchmPES6q5A=='
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - finstream-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8085:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: finstream
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9094
    depends_on:
      - kafka
    networks:
      - finstream-network

volumes:
  kafka_data:
  postgres_data:
    driver: local

networks:
  finstream-network:
    driver: bridge
